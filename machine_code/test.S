# Output generated by the C-Minus Compiler
.LCX:
	.comm	vfunc, 4
	.comm	vreadunsigned, 4
	.comm	vwriteunsigned, 0
	.comm	vwriteinteger, 0
	.comm	vreadinteger, 4
	.comm	vmain, 4
	.globl	func
func:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, %r10d
	addl	%esi, %r10d
	movl	%r10d, %r11d
	addl	%edx, %r11d
	movl	%r11d, %r12d
	addl	%ecx, %r12d
	movl	%r12d, %eax
	popq	%rbp
	ret
	.globl	main
main:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %r13d
	movl	%r13d, %ecx
	movl	$2, %r14d
	movl	%r14d, %edx
	movl	$3, %r15d
	movl	%r15d, %esi
	movl	$4, %r10d
	movl	%r10d, %edi
	call	func
	movl	%eax, %r10d
	movl	%r10d, %eax
	popq	%rbp
	ret
.LC0:
	.string "%d"
	.globl readinteger
readinteger:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	leaq	-12(%rbp), %rsi
	leaq	.LC0(%rip), %rdi
	call	scanf
	movl	-12(%rbp), %eax
	movq	%rbp, %rsp
	popq	%rbp
	ret
.LC1:
	.string "%d\n"
	.globl writeinteger
writeinteger:
	pushq	%rbp
	movl	%edi, %esi
	leaq	.LC1(%rip), %rdi
	call	printf
	popq	%rbp
	ret
.LC2:
	.string "%u"
	.globl readunsigned
readunsigned:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	leaq	-12(%rbp), %rsi
	leaq	.LC2(%rip), %rdi
	call	scanf
	movl	-12(%rbp), %eax
	movq	%rbp, %rsp
	popq	%rbp
	ret
.LC3:
	.string "%u\n"
	.globl writeunsigned
writeunsigned:
	pushq	%rbp
	movl	%edi, %esi
	leaq	.LC3(%rip), %rdi
	call	printf
	popq	%rbp
	ret
